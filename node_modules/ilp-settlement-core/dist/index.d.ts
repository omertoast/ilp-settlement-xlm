import { BigNumber } from 'bignumber.js';
import { SettlementStore } from './store';
import { createMemoryStore } from './store/memory';
import { connectRedis } from './store/redis';
export { createMemoryStore, connectRedis, SettlementStore };
export interface SettlementEngine {
    setupAccount?(accountId: string): Promise<void>;
    settle(accountId: string, amount: BigNumber): Promise<BigNumber>;
    handleMessage?(accountId: string, message: any): Promise<any>;
    closeAccount?(accountId: string): Promise<void>;
    disconnect?(): Promise<void>;
}
export interface AccountServices {
    sendMessage(accountId: string, message: any): Promise<any>;
    creditSettlement(accountId: string, amount: BigNumber, settlementId?: string): void;
    trySettlement(accountId: string): void;
}
export declare type ConnectSettlementEngine = (services: AccountServices) => Promise<SettlementEngine>;
export interface SettlementServerConfig {
    connectorUrl?: string;
    sendMessageUrl?: string;
    creditSettlementUrl?: string;
    port?: string | number;
}
export interface SettlementServer {
    shutdown(): Promise<void>;
}
export declare const startServer: (createEngine: ConnectSettlementEngine, store?: SettlementStore, config?: SettlementServerConfig) => Promise<SettlementServer>;
